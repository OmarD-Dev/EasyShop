{
	"info": {
		"_postman_id": "863c153c-0ce4-4c40-8945-ec76e4c80036",
		"name": "easyshop - solo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31926378"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Registration should succeed\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"{{newUserName}}\",\r\n  \"password\": \"{{newUserPassword}}\",\r\n  \"confirmPassword\": \"{{newUserPassword}}\",\r\n  \"role\": \"USER\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"userToken\", pm.response.json().token);\r",
							"\r",
							"pm.test(\"User Login should create token\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.have.jsonBody(\"token\");\r",
							"    pm.expect(pm.collectionVariables.get(\"userToken\")).to.not.equal(\"\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"{{newUserName}}\",\r\n  \"password\": \"{{newUserPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"adminToken\", pm.response.json().token)\r",
							"\r",
							"pm.test(\"Admin Login should succeed\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var items = pm.response.json();\r",
							"\r",
							"pm.test(\"Categories should be \" + items.length, function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(items.length).to.equal(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Category - not admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Category insert as non admin should fail\", function() {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Demo\",\r\n    \"description\": \"Some demo category.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var items = pm.response.json();\r",
							"\r",
							"pm.test(\"Categories should be \" + items.length, function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(items.length).to.equal(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Category - as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"newCategoryId\", pm.response.json().categoryId)\r",
							"\r",
							"var name = pm.response.json().name;\r",
							"\r",
							"pm.test(\"Category insert as admin should succeed\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.expect(name).to.equal(\"Demo\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJST0xFX0FETUlOIiwiZXhwIjoxNzA0MzM1MDEzfQ._C_dFBxJX1jZFcHMkIb9AouadurFz__Yp10Y6oVtedjoqZex4UfetgU93_r9otoE4y1Xt3-7Ktmqj4zGcWv7gw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Demo\",\r\n    \"description\": \"Some demo category.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Categories - after add",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var items = pm.response.json();\r",
							"\r",
							"pm.test(\"Categories should be \" + items.length, function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(items.length).to.equal(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get New Category By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var name = pm.response.json().name;\r",
							"\r",
							"pm.test(\"Get new category by id should succeed\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(name).to.equal(\"Demo\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories",
						"{{newCategoryId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Category update as admin should succeed\", function() {",
							"    console.log(pm.response);",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Updated Demo\",\n    \"description\": \"Demo that has been updated.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories",
						"{{newCategoryId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Category - as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new category should succeed\", function() {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Demo\",\r\n    \"description\": \"Some demo category.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories",
						"{{newCategoryId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Category By Id - after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get new category after delete should not be found \", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories",
						"{{newCategoryId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"\r",
							"pm.test('Number of products = ' + data.length, function () {\r",
							"    pm.expect(data.length).to.equal(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products?cat=1&minPrice=80&maxPrice=90",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "cat",
							"value": "1"
						},
						{
							"key": "minPrice",
							"value": "80"
						},
						{
							"key": "maxPrice",
							"value": "90"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add product - as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"newProductId\", pm.response.json().productId)",
							"",
							"var name = pm.response.json().name;",
							"",
							"pm.test(\"Category insert as admin should succeed\", function() {",
							"    pm.response.to.have.status(201);",
							"    pm.expect(name).to.equal(\"Demo Product\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJST0xFX0FETUlOIiwiZXhwIjoxNzA0MzM1MDEzfQ._C_dFBxJX1jZFcHMkIb9AouadurFz__Yp10Y6oVtedjoqZex4UfetgU93_r9otoE4y1Xt3-7Ktmqj4zGcWv7gw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Demo Product\",\n    \"price\": 25.99,\n    \"categoryId\": 2,\n    \"description\": \"product description\",\n    \"color\": \"Blue\",\n    \"imageUrl\": \"demo.jpg\",\n    \"stock\": 50,\n    \"featured\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product update as admin should succeed\", function() {",
							"    console.log(pm.response);",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Updated Product Name\",\n    \"price\": 25.99,\n    \"categoryId\": 2,\n    \"description\": \"Updated product description\",\n    \"color\": \"Blue\",\n    \"imageUrl\": \"https://example.com/image.jpg\",\n    \"stock\": 50,\n    \"featured\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/{{newProductId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{newProductId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userToken",
			"value": "userToken",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "adminToken",
			"type": "string"
		},
		{
			"key": "newCategoryId",
			"value": "3",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "newUserName",
			"value": "gary",
			"type": "string"
		},
		{
			"key": "newUserPassword",
			"value": "thePass",
			"type": "string"
		},
		{
			"key": "newProductId",
			"value": "90"
		}
	]
}